#!/usr/bin/env bash
set -euo pipefail

ROOT_DIR=$(git rev-parse --show-toplevel)
MAX_FILE_SIZE_BYTES=$((1024 * 1024)) # 1 MB

mapfile -t STAGED_FILES < <(git diff --cached --name-only --diff-filter=AM)
if (( ${#STAGED_FILES[@]} == 0 )); then
  echo "[pre-commit] No staged changes detected; skipping hook." >&2
  exit 0
fi

if [[ -z "${JAVA_HOME:-}" ]]; then
  echo "[pre-commit] JAVA_HOME must point to a Java 17 JDK before committing." >&2
  exit 1
fi

large_files=()
binary_files=()
for file in "${STAGED_FILES[@]}"; do
  [[ -f "$file" ]] || continue
  size_bytes=$(wc -c <"$file")
  if (( size_bytes > MAX_FILE_SIZE_BYTES )); then
    human_size=$(numfmt --to=iec --suffix=B "$size_bytes" 2>/dev/null || echo "${size_bytes}B")
    large_files+=("$file ($human_size)")
  fi

  mime_type=$(file -b --mime "$file" 2>/dev/null || echo "application/octet-stream")
  if [[ $mime_type == image/* ]]; then
    continue
  fi
  if [[ $mime_type == *"charset=binary"* ]] || [[ $mime_type == application/* ]]; then
    binary_files+=("$file ($mime_type)")
  fi
done

if (( ${#large_files[@]} > 0 )); then
  {
    echo "[pre-commit] The following staged files exceed the 1 MB limit:";
    printf '  - %s\n' "${large_files[@]}";
    echo "[pre-commit] Remove or split large files before committing.";
  } >&2
  exit 1
fi

if (( ${#binary_files[@]} > 0 )); then
  {
    echo "[pre-commit] Binary files detected in the staged changes:";
    printf '  - %s\n' "${binary_files[@]}";
    echo "[pre-commit] Remove generated artifacts (e.g., .class, .jar) before committing.";
  } >&2
  exit 1
fi

"$ROOT_DIR"/gradlew --no-daemon spotlessApply

declare -A tasks_to_run
for file in "${STAGED_FILES[@]}"; do
  case "$file" in
    core/src/*) tasks_to_run[":core:test"]=1 ;;
    cli/src/*) tasks_to_run[":cli:test"]=1 ;;
    rest-api/src/*) tasks_to_run[":rest-api:test"]=1 ;;
    ui/src/*) tasks_to_run[":ui:test"]=1 ;;
  esac
done

if (( ${#tasks_to_run[@]} > 0 )); then
  echo "[pre-commit] Running targeted test suites: ${!tasks_to_run[@]}"
  "$ROOT_DIR"/gradlew --no-daemon "${!tasks_to_run[@]}"
fi

"$ROOT_DIR"/gradlew --no-daemon check -x test

if ! command -v gitleaks >/dev/null 2>&1; then
  cat >&2 <<'EOF'
[pre-commit] gitleaks CLI is required but was not found on PATH.
[pre-commit] Install it (https://github.com/gitleaks/gitleaks#installation) and rerun the commit.
EOF
  exit 1
fi

gitleaks detect --no-banner --redact --staged --source "$ROOT_DIR"

if ! command -v gitlint >/dev/null 2>&1; then
  cat >&2 <<'EOF'
[pre-commit] gitlint CLI is required but was not found on PATH.
[pre-commit] Install it (https://github.com/jorisroovers/gitlint#installation) and rerun the commit.
EOF
  exit 1
fi

gitlint --staged
