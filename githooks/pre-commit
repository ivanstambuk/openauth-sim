#!/usr/bin/env bash
set -euo pipefail

ROOT_DIR=$(git rev-parse --show-toplevel)
MAX_FILE_SIZE_BYTES=$((1024 * 1024)) # 1 MB

if [[ -z "${JAVA_HOME:-}" ]]; then
  echo "[pre-commit] JAVA_HOME must point to a Java 17 JDK before committing." >&2
  exit 1
fi

large_files=()
while IFS= read -r file; do
  [[ -f "$file" ]] || continue
  size_bytes=$(wc -c <"$file")
  if (( size_bytes > MAX_FILE_SIZE_BYTES )); then
    human_size=$(numfmt --to=iec --suffix=B "$size_bytes" 2>/dev/null || echo "${size_bytes}B")
    large_files+=("$file ($human_size)")
  fi
done < <(git diff --cached --name-only --diff-filter=AM)

if (( ${#large_files[@]} > 0 )); then
  {
    echo "[pre-commit] The following staged files exceed the 1 MB limit:";
    printf '  - %s\n' "${large_files[@]}";
    echo "[pre-commit] Remove or split large files before committing.";
  } >&2
  exit 1
fi

"$ROOT_DIR"/gradlew --no-daemon spotlessApply check

if ! command -v gitleaks >/dev/null 2>&1; then
  cat >&2 <<'EOF'
[pre-commit] gitleaks CLI is required but was not found on PATH.
[pre-commit] Install it (https://github.com/gitleaks/gitleaks#installation) and rerun the commit.
EOF
  exit 1
fi

gitleaks detect --no-banner --redact --staged --source "$ROOT_DIR"

if ! command -v gitlint >/dev/null 2>&1; then
  cat >&2 <<'EOF'
[pre-commit] gitlint CLI is required but was not found on PATH.
[pre-commit] Install it (https://github.com/jorisroovers/gitlint#installation) and rerun the commit.
EOF
  exit 1
fi

gitlint --staged
